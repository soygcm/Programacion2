<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Courier New";
	panose-1:2 7 3 9 2 2 5 2 4 4;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"ＭＳ ゴシック";}
@font-face
	{font-family:"ＭＳ ゴシック";}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Lucida Grande";
	panose-1:2 11 6 0 4 5 2 2 2 4;}
@font-face
	{font-family:"Menlo Regular";
	src: url(menlo.ttc);
	panose-1:2 11 6 9 3 8 4 2 2 4;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	line-height:114%;
	font-size:14.0pt;
	font-family:Calibri;}
h1
	{margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	font-size:16.0pt;
	font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;
	font-weight:normal;}
h2
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:20.0pt;
	font-family:Calibri;
	color:#4F81BD;
	font-weight:bold;}
h3
	{margin-top:1.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:Cambria;
	color:#1F497D;
	letter-spacing:.7pt;
	font-weight:normal;}
h4
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:12.0pt;
	font-family:Calibri;
	color:black;
	font-weight:bold;
	font-style:italic;}
h5
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:black;
	font-weight:normal;}
h6
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:#4F81BD;
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:black;
	font-style:italic;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:10.0pt;
	font-family:Cambria;
	color:black;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:10.0pt;
	font-family:Cambria;
	color:black;
	font-style:italic;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:Cambria;
	font-variant:small-caps;
	color:#1F497D;
	letter-spacing:.3pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:48.0pt;
	font-family:Cambria;
	color:#1F497D;
	letter-spacing:1.5pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	line-height:114%;
	font-size:20.0pt;
	font-family:Calibri;
	color:#1F497D;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
strong
	{color:#1F497D;
	font-weight:normal;
	font-style:italic;}
em
	{font-weight:bold;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";}
code
	{font-family:"Courier New";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:Courier;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:"Lucida Grande";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:Calibri;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:36.0pt;
	text-indent:-14.4pt;
	font-size:14.0pt;
	font-family:Calibri;
	color:#1F497D;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:150%;
	font-size:13.0pt;
	font-family:Calibri;
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{margin-top:10.0pt;
	margin-right:12.95pt;
	margin-bottom:10.0pt;
	margin-left:12.95pt;
	text-align:center;
	line-height:150%;
	background:#4F81BD;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:Cambria;
	color:white;}
span.MsoSubtleEmphasis
	{color:black;
	font-style:italic;}
span.MsoIntenseEmphasis
	{color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.MsoSubtleReference
	{font-variant:small-caps;
	color:black;
	text-decoration:underline;}
span.MsoIntenseReference
	{font-variant:small-caps;
	color:#4F81BD;
	letter-spacing:.25pt;
	font-weight:normal;
	text-decoration:underline;}
span.MsoBookTitle
	{font-variant:normal !important;
	color:#1F497D;
	text-transform:uppercase;
	letter-spacing:.5pt;
	font-weight:bold;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:110%;
	font-size:16.0pt;
	font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;
	font-weight:bold;}
span.Ttulo1Car
	{font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;}
span.TtuloCar
	{font-family:Cambria;
	color:#1F497D;
	letter-spacing:1.5pt;}
span.Ttulo2Car
	{font-family:"ＭＳ ゴシック";
	color:#4F81BD;
	font-weight:bold;}
span.Ttulo3Car
	{font-family:Cambria;
	color:#1F497D;
	letter-spacing:.7pt;}
span.Ttulo4Car
	{font-family:"ＭＳ ゴシック";
	color:black;
	font-weight:bold;
	font-style:italic;}
span.Ttulo5Car
	{font-family:Cambria;
	color:black;}
span.Ttulo6Car
	{font-family:Cambria;
	color:#4F81BD;}
span.Ttulo7Car
	{font-family:Cambria;
	color:black;
	font-style:italic;}
span.Ttulo8Car
	{font-family:Cambria;
	color:black;}
span.Ttulo9Car
	{font-family:Cambria;
	color:black;
	font-style:italic;}
span.SubttuloCar
	{font-family:"ＭＳ ゴシック";
	color:#1F497D;}
span.CitaCar
	{font-family:"ＭＳ 明朝";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.CitaintensaCar
	{font-family:Cambria;
	color:white;
	background:transparent;}
p.PersonalName, li.PersonalName, div.PersonalName
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:14.0pt;
	font-family:Cambria;
	color:black;
	text-transform:uppercase;
	letter-spacing:1.5pt;
	font-weight:bold;}
span.HTMLconformatoprevioCar
	{font-family:Courier;}
span.TextodegloboCar
	{font-family:"Lucida Grande";}
p.Codigo, li.Codigo, div.Codigo
	{padding-top:6.0pt;
	margin-right:0cm;
	margin-bottom: 0;
	margin-top: 0;
	padding-left: 3.0pt;
	padding-bottom:9.0pt;
	margin-left:35.45pt;
	line-height:114%;
	background:#D9D9D9;
	font-size:14.0pt;
	font-family:"Menlo Regular", "Lucida Console", Monaco, monospace;
	color:black;}
.MsoChpDefault
	{font-size:11.0pt;
	font-family:Calibri;}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ES-TRAD link=blue vlink=purple>

<div class='WordSection1 container'>

<div class="row">
  <div class="col-md-8 col-md-offset-2">

<h1><span lang=ES>Universidad de Costa Rica</span></h1>

<h1><span lang=ES>Ciencias de Computación e Informática</span></h1>

<h1><span lang=ES>CI-1201 Programación II</span></h1>

<h1><span lang=ES>Profesor Adolfo Di Mare</span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h1 align=center style='text-align:center'><span lang=ES style='font-size:48.0pt;
color:#1F497D;letter-spacing:1.5pt'>Cambio al Rep de la calculadora de números
racionales</span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h1><span lang=ES>Gabriel Castañaza B31520</span></h1>

<h1><span lang=ES>gcmelmejor@gmail.com</span></h1>

<h1><span lang=ES>&nbsp;</span></h1>

<h1><span lang=ES>&nbsp;</span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h2><span lang=ES>Introducción</span></h2>

<p class=MsoNormal style='text-align:justify'><span lang=ES>“Con alguna frecuencia
es necesario hacer aritmética con números racionales, para lo que conviene
contar con una clase números racionales.”</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=ES>La tarea consiste
en modificar una clase C++ cambiándole por completo el Rep. Se reemplazará los
campos num y den, que sirven para el denominador y el numerador de la clase
“<a href="completo/html/classrational.html">rational</a>” y en su lugar se usará una lista std::list&lt;&gt; de la biblioteca
estándar.</span></p>

<h2><span lang=ES>Descripción del problema</span></h2>

<p class=MsoNormal style='text-align:justify'><span lang=ES>El principal
problema es que para cambiar el Rep de una clase, hay que tener cuidado, ya que
los campos originales son usados continuamente por toda la clase. Por ello el
consejo de “no metérsele al Rep” tiene sentido incluso dentro de los métodos de
la misma clase, eso permite hacer menos cambios para ajustar de nuevo el Rep. </span></p>

<p class=MsoNormal style='text-align:justify'><span lang=ES>Para que esto
funcione, se recomienda obtener el valor de un campo usando un método
especifico para cada campo.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=ES>Además se nos pide
que hagamos dos versiones de la clase “<a href="completo/html/classrational.html">rational</a>”, una que funcione con la clase
calculadora “p2-ta-3.cpp” y otra que funcione con “<a href="completo/html/classtest__rational.html">test_rational</a>.cpp”. Esto se
explicara detalladamente mas adelante.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=ES>Y por ultimo
documentar la clase calculadora usando Doxygen.</span></p>

<h2><span lang=ES>Cambiar el Rep de la clase “<a href="completo/html/classrational.html">rational</a>”</span></h2>

<p class=MsoNormal><span lang=ES>La clase <a href="completo/html/classrational.html">rational</a> implementa las operaciones
aritméticas principales para números racionales.</span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=ES
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ES>[1/3] == [2/6] == ... [9/27] == ...</span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=ES
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ES>[1/3] * [2/6] / [3/9] - [9/27] </span></p>

<p class=MsoNormal><span lang=ES>Y para ello utiliza dos campos “m_den”,
“m_num” que son de tipo emplantillado, para poder usar ya sea int o long, etc.</span></p>

<p class=MsoNormal><span lang=ES>Lo primero que hay que hacer es cambiar esos
dos campos por solo un campo de tipo lista.</span></p>

<p class=Codigo><span lang=ES>private</span><span lang=ES style='color:#C0504D'>:</span></p>

<p class=Codigo><span lang=ES>    </span><span lang=ES style='color:#76923C'>std</span><span
lang=ES style='color:#C0504D'>::</span><span lang=ES style='color:#76923C'>list</span><span
lang=ES style='color:#C0504D'>&lt;</span><span lang=ES>INT</span><span lang=ES
style='color:#C0504D'>&gt;</span><span lang=ES> m_Rep</span><span lang=ES
style='color:#C0504D'>;</span></p>

<p class=MsoNormal><span lang=ES>Como se puede ver, hay varias cosas a tomar en
cuenta. En primer lugar, que el campo debe ser privado, y esto es para, adivine
que… “no se le metan al Rep” </span></p>

<p class=MsoNormal><span lang=ES>Por otro lado, la lista esta emplantillada, y
por último el nombre es significativo.</span></p>

<p class=MsoNormal><span lang=ES>Pero el primer problema que encontraremos es
que toda la clase hace referencia a los campos anteriores, así que simplemente
no va a compilar. El truco que usaremos es hacer dos métodos uno para obtener
el numerador y otro para el denominador. Pero estos métodos deben estar
duplicados, una versión constante que será publica y una versión privada que se
podrá modificar.</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>public</span><span lang=ES
style='color:maroon'>:</span></p>

<p class=Codigo><span lang=ES>    </span><span lang=ES style='color:#3366FF'>const</span><span
lang=ES> INT</span><span lang=ES style='color:maroon'>&amp;</span><span
lang=ES> num</span><span lang=ES style='color:maroon'>()</span><span lang=ES> </span><span
lang=ES style='color:#3366FF'>const</span><span lang=ES> </span><span lang=ES
style='color:maroon'>{</span><span lang=ES> </span><span lang=ES
style='color:#3366FF'>return</span><span lang=ES> </span><span lang=ES
style='color:maroon'>*(</span><span lang=ES>m_Rep.</span><span lang=ES
style='color:green'>begin</span><span lang=ES style='color:maroon'>()); }</span></p>

<p class=Codigo><span lang=ES>    </span><span lang=ES style='color:#3366FF'>const</span><span
lang=ES> INT</span><span lang=ES style='color:maroon'>&amp;</span><span
lang=ES> den</span><span lang=ES style='color:maroon'>()</span><span lang=ES> </span><span
lang=ES style='color:#3366FF'>const</span><span lang=ES> </span><span lang=ES
style='color:maroon'>{</span></p>

<p class=Codigo><span lang=ES>        </span><span lang=ES style='color:#3366FF'>return</span><span
lang=ES> </span><span lang=ES style='color:maroon'>*( ++(</span><span lang=ES>m_Rep</span><span
lang=ES style='color:maroon'>.</span><span lang=ES style='color:green'>begin</span><span
lang=ES style='color:maroon'>()) ) ; }</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>private</span><span
lang=ES>:</span></p>

<p class=Codigo><span lang=ES>    </span><span lang=ES style='color:#7F7F7F'>//
Versión modificadora de num().</span></p>

<p class=Codigo><span lang=ES>    INT</span><span lang=ES style='color:maroon'>&amp;</span><span
lang=ES> num</span><span lang=ES style='color:maroon'>() {</span><span lang=ES>
</span><span lang=ES style='color:#3366FF'>return</span><span lang=ES> </span><span
lang=ES style='color:maroon'>*(</span><span lang=ES>m_Rep</span><span lang=ES
style='color:maroon'>.</span><span lang=ES style='color:green'>begin</span><span
lang=ES style='color:maroon'>()); }</span></p>

<p class=Codigo><span lang=ES>    </span><span lang=ES style='color:#7F7F7F'>//
Versión modificadora de den().</span></p>

<p class=Codigo><span lang=ES>    INT</span><span lang=ES style='color:maroon'>&amp;</span><span
lang=ES> den</span><span lang=ES style='color:maroon'>() {</span></p>

<p class=Codigo><span lang=ES>        </span><span lang=ES style='color:#3366FF'>typename</span><span
lang=ES> </span><span lang=ES style='color:green'>std</span><span lang=ES
style='color:maroon'>::</span><span lang=ES style='color:green'>list</span><span
lang=ES style='color:maroon'>&lt;</span><span lang=ES>INT</span><span lang=ES
style='color:maroon'>&gt;::</span><span lang=ES style='color:green'>iterator</span><span
lang=ES> it </span></p>

<p class=Codigo><span lang=ES>            </span><span lang=ES
style='color:maroon'>=</span><span lang=ES> m_Rep</span><span lang=ES
style='color:maroon'>.</span><span lang=ES style='color:green'>begin</span><span
lang=ES style='color:maroon'>();</span></p>

<p class=Codigo><span lang=ES>        </span><span lang=ES style='color:maroon'>++</span><span
lang=ES>it</span><span lang=ES style='color:maroon'>;</span></p>

<p class=Codigo><span lang=ES>        </span><span lang=ES style='color:#3366FF'>return</span><span
lang=ES> </span><span lang=ES style='color:maroon'>*</span><span lang=ES>it</span><span
lang=ES style='color:maroon'>;</span></p>

<p class=Codigo><span lang=ES>    }</span></p>

<p class=MsoNormal><span lang=ES>Se usan varios trucos como incrementar un
iterador, para obtener el segundo elemento de la lista.</span></p>

<h2><span lang=ES>Versión Simple</span></h2>

<p class=MsoNormal><span lang=ES>Se nos pidió que en la carpeta “simple” hiciéramos
solo los cambios necesarios, para que el programa calculadora compile y se ejecute
correctamente.</span></p>

<p class=MsoNormal><span lang=ES>Para saber que métodos son necesarios
modificar, nos fijamos en la clase calculadora y cuando se usan los métodos u
operadores en la clase <a href="completo/html/classrational.html">rational</a></span></p>

<p class=Codigo><span lang=ES><a href="completo/html/classrational.html">rational</a></span><span lang=ES style='color:red'>&lt;</span><span
lang=ES style='color:blue'>long</span><span lang=ES style='color:red'>&gt;</span><span
lang=ES> r</span><span lang=ES style='color:red'>,</span><span lang=ES> </span></p>

<p class=Codigo><span lang=ES>               acum</span><span lang=ES
style='color:red'>;</span></p>

<p class=Codigo><span lang=ES style='color:#7F7F7F'>...</span></p>

<p class=Codigo><span lang=ES style='color:green'>std</span><span lang=ES
style='color:red'>::</span><span lang=ES style='color:green'>cout</span><span
lang=ES> </span><span lang=ES style='color:red'>&lt;&lt;</span><span lang=ES>
acum</span><span lang=ES style='color:#7F7F7F'>...// operador &lt;&lt;</span></p>

<p class=Codigo><span lang=ES style='color:green'>std</span><span lang=ES
style='color:red'>::</span><span lang=ES style='color:green'>cin</span><span
lang=ES> </span><span lang=ES style='color:red'>&gt;&gt; </span><span lang=ES>r</span><span
lang=ES style='color:red'>; </span><span lang=ES style='color:#7F7F7F'>//
operador &gt;&gt;</span></p>

<p class=Codigo><span lang=ES style='color:#7F7F7F'>...</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>case</span><span lang=ES> </span><span
lang=ES style='color:#947308'>'+'</span><span lang=ES style='color:red'>:</span><span
lang=ES> acum</span><span lang=ES style='color:red'>.</span><span lang=ES>operator</span><span
lang=ES style='color:red'>+=(</span><span lang=ES>r</span><span lang=ES
style='color:red'>);</span><span lang=ES> </span><span lang=ES
style='color:#7F7F7F'>// operador +=</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>case</span><span lang=ES> </span><span
lang=ES style='color:#947308'>'-'</span><span lang=ES style='color:red'>:</span><span
lang=ES> acum  </span><span lang=ES style='color:red'>=</span><span lang=ES>
operator</span><span lang=ES style='color:red'>-(</span><span lang=ES>acum</span><span
lang=ES style='color:red'>,</span><span lang=ES>r</span><span lang=ES
style='color:red'>);</span><span lang=ES> </span><span lang=ES
style='color:#7F7F7F'>// operador -</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>case</span><span lang=ES> </span><span
lang=ES style='color:#947308'>'*'</span><span lang=ES style='color:red'>:</span><span
lang=ES> acum </span><span lang=ES style='color:red'>*=</span><span lang=ES> r</span><span
lang=ES style='color:red'>;</span><span lang=ES> </span><span lang=ES
style='color:#7F7F7F'>// operador *=</span></p>

<p class=Codigo><span lang=ES style='color:#3366FF'>case</span><span lang=ES> </span><span
lang=ES style='color:#947308'>'/'</span><span lang=ES style='color:red'>:</span><span
lang=ES> acum  </span><span lang=ES style='color:red'>=</span><span lang=ES>
acum </span><span lang=ES style='color:red'>/</span><span lang=ES> r</span><span
lang=ES style='color:red'>;</span><span lang=ES> </span><span lang=ES
style='color:#7F7F7F'>// operador /</span><span lang=ES> </span></p>

<p class=MsoNormal><span lang=ES>Luego vamos a la clase “<a href="completo/html/classrational.html">rational</a>” y
modificamos cada uno de los operadores de la clase cambiando los campos
anteriores a los métodos que creamos.</span></p>

<p class=Codigo><span lang=ES style='color:red'>.</span><span lang=ES>m_num</span></p>

<p class=Codigo><span lang=ES style='color:#7F7F7F'>// y después:</span></p>

<p class=Codigo><span lang=ES style='color:red'>.</span><span lang=ES>num</span><span
lang=ES style='color:red'>()</span></p>

<p class=MsoNormal><span lang=ES>¿Porque la clase funciona si no hemos actualizado
todos los métodos? </span></p>

<p class=MsoNormal><span lang=ES>Esto es debido a que el compilador de C++ no
compila los métodos que no son invocados. Por esa razón funciona sin haber
terminado de actualizar la clase completamente.</span></p>

<h2><span lang=ES>Versión Completo</span></h2>

<p class=MsoNormal><span lang=ES>A continuación seguimos actualizando el resto
de métodos, usando la opción de buscar y reemplazar.</span></p>

  </div>
</div>

<img style="margin: 20px auto; display: block;" src="http://fc00.deviantart.net/fs37/f/2008/288/d/6/Portrait__Retrato_by_soygcm.jpg" alt="" width="80">

</div>

</body>

</html>
