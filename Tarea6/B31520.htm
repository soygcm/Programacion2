<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 14 (filtered)">

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Courier New";
	panose-1:2 7 3 9 2 2 5 2 4 4;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"ＭＳ ゴシック";}
@font-face
	{font-family:"ＭＳ ゴシック";}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Lucida Grande";
	panose-1:2 11 6 0 4 5 2 2 2 4;}
@font-face
	{font-family:"Menlo Regular";
	panose-1:2 11 6 9 3 8 4 2 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	line-height:114%;
	font-size:14.0pt;
	font-family:Calibri;}
h1
	{margin-top:18.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	font-size:16.0pt;
	font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;
	font-weight:normal;}
h2
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:20.0pt;
	font-family:Calibri;
	color:#4F81BD;
	font-weight:bold;}
h3
	{margin-top:1.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:Cambria;
	color:#1F497D;
	letter-spacing:.7pt;
	font-weight:normal;}
h4
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:12.0pt;
	font-family:Calibri;
	color:black;
	font-weight:bold;
	font-style:italic;}
h5
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:black;
	font-weight:normal;}
h6
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:#4F81BD;
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:11.0pt;
	font-family:Cambria;
	color:black;
	font-style:italic;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:10.0pt;
	font-family:Cambria;
	color:black;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:114%;
	font-size:10.0pt;
	font-family:Cambria;
	color:black;
	font-style:italic;}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:Cambria;
	font-variant:small-caps;
	color:#1F497D;
	letter-spacing:.3pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:48.0pt;
	font-family:Cambria;
	color:#1F497D;
	letter-spacing:1.5pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:0cm;
	line-height:114%;
	font-size:20.0pt;
	font-family:Calibri;
	color:#1F497D;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
strong
	{color:#1F497D;
	font-weight:normal;
	font-style:italic;}
em
	{font-weight:bold;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";}
code
	{font-family:"Courier New";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:Courier;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:9.0pt;
	font-family:"Lucida Grande";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:Calibri;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:36.0pt;
	text-indent:-14.4pt;
	font-size:14.0pt;
	font-family:Calibri;
	color:#1F497D;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:150%;
	font-size:13.0pt;
	font-family:Calibri;
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{margin-top:10.0pt;
	margin-right:12.95pt;
	margin-bottom:10.0pt;
	margin-left:12.95pt;
	text-align:center;
	line-height:150%;
	background:#4F81BD;
	border:none;
	padding:0cm;
	font-size:14.0pt;
	font-family:Cambria;
	color:white;}
span.MsoSubtleEmphasis
	{color:black;
	font-style:italic;}
span.MsoIntenseEmphasis
	{color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.MsoSubtleReference
	{font-variant:small-caps;
	color:black;
	text-decoration:underline;}
span.MsoIntenseReference
	{font-variant:small-caps;
	color:#4F81BD;
	letter-spacing:.25pt;
	font-weight:normal;
	text-decoration:underline;}
span.MsoBookTitle
	{font-variant:normal !important;
	color:#1F497D;
	text-transform:uppercase;
	letter-spacing:.5pt;
	font-weight:bold;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:110%;
	font-size:16.0pt;
	font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;
	font-weight:bold;}
span.Ttulo1Car
	{font-family:Cambria;
	color:#4F81BD;
	letter-spacing:1.0pt;}
span.TtuloCar
	{font-family:Cambria;
	color:#1F497D;
	letter-spacing:1.5pt;}
span.Ttulo2Car
	{font-family:"ＭＳ ゴシック";
	color:#4F81BD;
	font-weight:bold;}
span.Ttulo3Car
	{font-family:Cambria;
	color:#1F497D;
	letter-spacing:.7pt;}
span.Ttulo4Car
	{font-family:"ＭＳ ゴシック";
	color:black;
	font-weight:bold;
	font-style:italic;}
span.Ttulo5Car
	{font-family:Cambria;
	color:black;}
span.Ttulo6Car
	{font-family:Cambria;
	color:#4F81BD;}
span.Ttulo7Car
	{font-family:Cambria;
	color:black;
	font-style:italic;}
span.Ttulo8Car
	{font-family:Cambria;
	color:black;}
span.Ttulo9Car
	{font-family:Cambria;
	color:black;
	font-style:italic;}
span.SubttuloCar
	{font-family:"ＭＳ ゴシック";
	color:#1F497D;}
span.CitaCar
	{font-family:"ＭＳ 明朝";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.CitaintensaCar
	{font-family:Cambria;
	color:white;
	background:transparent;}
p.PersonalName, li.PersonalName, div.PersonalName
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:14.0pt;
	font-family:Cambria;
	color:black;
	text-transform:uppercase;
	letter-spacing:1.5pt;
	font-weight:bold;}
span.HTMLconformatoprevioCar
	{font-family:Courier;}
span.TextodegloboCar
	{font-family:"Lucida Grande";}
p.Codigo, li.Codigo, div.Codigo
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:9.0pt;
	margin-left:35.45pt;
	line-height:114%;
	background:#D9D9D9;
	font-size:14.0pt;
	font-family:"Menlo Regular";
	color:black;}
.MsoChpDefault
	{font-size:11.0pt;
	font-family:Calibri;}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ES-TRAD link=blue vlink=purple>

<div class='WordSection1 container'>

<div class="row">
  <div class="col-md-8 col-md-offset-2">

<h1><span lang=ES>Universidad de Costa Rica</span></h1>

<h1><span lang=ES>Ciencias de Computación e Informática</span></h1>

<h1><span lang=ES>CI-1201 Programación II</span></h1>

<h1><span lang=ES>Profesor Adolfo Di Mare</span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h1 align=center style='text-align:center'><span lang=ES style='font-size:48.0pt;
color:#1F497D;letter-spacing:1.5pt'>Listado de </span><span lang=ES><a
href="http://soygcm.github.io/Programacion2/Tarea6/html/fotosRepetidas_8cpp_source.html"><span
style='font-size:48.0pt;letter-spacing:1.5pt'>fotos repetidas</span></a></span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h1><span lang=ES><a href="https://github.com/soygcm/">Gabriel Castañaza B31520</a></span></h1>

<h1><span lang=ES>gcmelmejor@gmail.com</span></h1>

<h1><span lang=ES>&nbsp;</span></h1>

<h1><span lang=ES>&nbsp;</span></h1>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<p class=MsoNormal><span lang=ES>&nbsp;</span></p>

<h2><span lang=ES>Introducción</span></h2>

<p class=MsoNormal><span lang=ES>Tal y como cita en el enunciado de la tarea,
tenemos que crear un programa, capaz de trabajar con dos carpetas, una donde
estén las fotos de la cámara y otra donde guardamos una copia de esas fotos.
Obtener dos listas con los archivos en cada carpeta y luego compararlas de tal
forma que se “obtenga 3 grupos: los que aparecen en ambos, los que aparecen
solo en la primera carpeta y los que solo aparecen en la segunda. Para obtener
los nombres de archivos use la bilioteca <b>'readDir'</b> vista en clase y las
listas <b>std::list&lt;&gt;</b> de la biblioteca estándar de C++” (Adolfo Di
Mare)</span></p>

<p class=MsoNormal><span lang=ES>Pero también hay que tomar en cuenta “que
algunas fotos hayan sido <b>renombradas</b>, separe en 2 partes el nombre de
cada foto. Por ejemplo, el nombre &quot;dsc00200 Dele Beso.jpg&quot; quedaría
separado en [ 'dsc00200' | &quot;Dele Beso.jpg&quot; ] de manera que la
comparación de nombres de carpeta se pueda hacer utilizanado 'dsc00200' y
desechando &quot;Dele Beso.jpg&quot;. Recuerde ignorar las diferencias entre <b>mayúsculas
y minúsculas</b> en los nombres de archivo” (Adolfo Di Mare)</span></p>

<h2><span lang=ES>Descripción del problema</span></h2>

<p class=MsoNormal><span lang=ES>Como hemos visto, es necesario usar una
biblioteca para leer una carpeta. Que es la parte mas importante de la
aplicación. Luego lo que hay que hacer es la comparación usando las listas de
la biblioteca estándar.</span></p>

<h2><span lang=ES>Librería readDir</span></h2>

<p class=MsoNormal><span lang=ES>Resulta que esta librería usa otra &lt;io.h&gt;
la cual no existe en el sistema operativo Mac OS</span></p>

<p class=MsoNormal><span lang=ES>Así que el primer problema, es buscar como
leer una carpeta usando otra alternativa.</span></p>

<p class=MsoNormal><span lang=ES>La alternativa encontrada es <a href="http://pubs.opengroup.org/onlinepubs/7908799/xsh/dirent.h.html">&lt;dirent.h&gt;</a></span></p>

<p class=MsoNormal><span lang=ES>Que por medio de estos dos métodos, se puede
acceder un directorio y luego a cada uno de sus elementos.</span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=ES
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ES style='font-family:Consolas'>DIR *opendir(const
char *);</span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=ES
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=ES style='font-family:Consolas'>struct dirent
*readdir(DIR *);</span></p>

<p class=MsoNormal><span lang=ES>Por supuesto, hay que tomar en cuenta que las
carpetas son en realidad arboles, asi que deben ser recorridos como arboles, en
este caso se escogió el algoritmo de profundidad primero. Que hace uso de la
recursividad.</span></p>

<h2><span lang=ES>Comparación de Listas</span></h2>

<p class=MsoNormal><span lang=ES>Luego de leer las carpetas y guardar sus
archivos (solamente los que terminan en “jpg”)</span></p>

<p class=MsoNormal><span lang=ES>Se procede a realizar una comparación entre
las dos listas.</span></p>

<p class=MsoNormal><span lang=ES>Esta tarea se hace por medio de iteradores,
simplemente recorriendo ambas listas en un ciclo for anidado dentro de otro.</span></p>

<p class=MsoNormal><span lang=ES>Esto hay que repetirlo dos veces, una vez con
la primera lista en el ciclo externo y en la segunda vez con la segunda lista
en el ciclo externo.</span></p>

<p class=MsoNormal><span lang=ES>Además en el primer ciclo hay que identificar
los archivos que están en ambas listas.</span></p>

<p class=MsoNormal><span lang=ES>Todo esto puede usted verlo aquí en la
documentación </span></p>

<p class=MsoNormal align=center style='text-align:center'><span lang=ES><a
href="http://soygcm.github.io/Programacion2/Tarea6/html/"><b>Documentación</b></a></span></p>

  </div>
</div>

<img style="margin: 20px auto; display: block;" src="http://fc00.deviantart.net/fs37/f/2008/288/d/6/Portrait__Retrato_by_soygcm.jpg" alt="" width="80">

</div>

</body>

</html>
